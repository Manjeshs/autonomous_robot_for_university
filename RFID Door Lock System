#RFID Door Lock System

#include <Wire.h>
#include <SPI.h>
#include <MFRC522.h>
 
#define SS_PIN 10
#define RST_PIN 9
#define LED_G 4 // Green LED pin
#define LED_R 5 // Red LED pin
#define BUZZER 2 // Buzzer pin
#define lock 3 // Door lock pin
#define Btn 6 // Manual access grant button pin
 
MFRC522 mfrc522(SS_PIN, RST_PIN);
 
void setup () {
  Serial.begin(9600);
  SPI.begin();
  mfrc522.PCD_Init ();
  
  Pin Mode(LED_G, OUTPUT);
  Pin Mode(LED_R, OUTPUT);
  Pin Mode(BUZZER, OUTPUT);
  Pin Mode(lock, OUTPUT);
  Pin Mode(Btn, INPUT);
}
 
void loop () {
  // Check if the manual access grant button is pressed
  if (digital Read(Btn) == HIGH) {
    grant Access();
  }
  
  // Check for new RFID cards
  if (mfrc522.PICC_IsNewCardPresent () && mfrc522.PICC_ReadCardSerial ()) {
    String content = "";
    for (byte i = 0; i < mfrc522.uid.size; i++) {
      content.concat(String (mfrc522.uid.uidByte[i] < 0x10? " 0": " "));
      content.concat(String (mfrc522.uid.uidByte[i], HEX));
    }
    content.toUpperCase();
   
    // Compare scanned card's UID with predefined UID
    if (content.substring(1) == "83 23 38 BB") {
      grantAccess();
    } else {
      accessDenied();
    }
  }
}
 
// Function to grant access
void grantAccess() {
  Serial.println("Access Granted");
  
  digitalWrite(LED_G, HIGH);
  tone (BUZZER, 2000);
  delay (100);
  noTone(BUZZER);
  delay (50);
  tone (BUZZER, 2000);
  delay (100);
  noTone(BUZZER);
  
  digitalWrite(lock, HIGH); // Activate door lock
  delay (3000); // Keep the lock activated for 3 seconds
  digitalWrite(lock, LOW); // Deactivate door lock
  
  digitalWrite(LED_G, LOW);
  tone (BUZZER, 2000);
  delay (100);
  noTone(BUZZER);
  delay (50);
}
 
// Function to indicate access denied
void accessDenied() {
  Serial.println("Access Denied");
  
  for (int i = 0; i < 3; i++) {
    digitalWrite(LED_R, HIGH);
    tone (BUZZER, 1500);
    delay (500);
    digitalWrite(LED_R, LOW);
    noTone(BUZZER);
    delay (100);
  }
}

